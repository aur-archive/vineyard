--- vineyard-0.1.4.1.4/vineyard-preferences
+++ vineyard-0.1.4.1.4-new/vineyard-preferences
@@ -170,7 +170,9 @@
         self.widgets['treeview-pages'].append_column(column)
 
         #self.widgets['notebook'].set_show_tabs(False)
-        icon_theme = gtk.icon_theme_get_default()
+        #icon_theme = gtk.icon_theme_get_default()
+        icon_theme = gtk.IconTheme()
+        icon_theme.set_custom_theme('gnome')
         liststore = gtk.ListStore(gtk.gdk.Pixbuf, str)
         height = gtk.icon_size_lookup(gtk.ICON_SIZE_BUTTON)[1]
         for page in [(_("General"), 'computer'), (_("Folders"), 'folder'), (_("Drives"), 'harddrive'), (_("Graphics"), 'applications-graphics'), (_("Sound"), 'audio-volume-high'), (_("Libraries"), 'document-properties'), (_("Tools"), 'applications-accessories')]:

--- vineyard-0.1.4.1.4/data/widgets/icons.py
+++ vineyard-0.1.4.1.4-new/data/widgets/icons.py
@@ -6,6 +6,9 @@
 import gtk, glib
 import wine
 
+icon_theme=gtk.IconTheme()
+icon_theme.set_custom_theme('gnome')
+
 def getIconPixbufFromProgram(program, size=32, force_update=False):
     # Fill the programs listview
     icon = wine.programs.getIcon(program, force_update=force_update)
@@ -20,11 +23,11 @@
             if type(icon) == list:
                 """ Manual icon replacement for script files """
                 if icon == ['text-x-generic'] and 'programexe' in program and program['programexe'].lower().endswith('.bat'):
-                    icon = gtk.icon_theme_get_default().load_icon('text-x-script', size, 0)
+                    icon = icon_theme.load_icon('text-x-script', size, 0)
                 else:
                     for iconname in icon:
                     	try:
-                        	icon = gtk.icon_theme_get_default().load_icon(iconname, size, 0)
+                        	icon = icon_theme.load_icon(iconname, size, 0)
                         	break
                         except glib.GError:
                         	continue
@@ -37,9 +40,9 @@
     if icon == None:
         #self.debug("\tIcon lookup returned nothing.")
         try:
-            icon = gtk.icon_theme_get_default().load_icon("application-x-ms-dos-executable", size, 0)
+            icon = icon_theme.load_icon("application-x-ms-dos-executable", size, 0)
         except glib.GError:
-            icon = gtk.icon_theme_get_default().load_icon("application-x-executable", size, 0)
+            icon = icon_theme.load_icon("application-x-executable", size, 0)
             #self.debug("\tUsing template icon.")
     return icon
 
